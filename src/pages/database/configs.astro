---
import Layout from "../../layouts/Layout.astro";
import { Icon } from "astro-icon/components";

import { fetchConfigs, getDownloads } from "../../scripts/fetch";
import { getDesktopColor } from "../../scripts/fetch";
import { getCategoryColor } from "../../scripts/fetch";

const configs = await fetchConfigs();
const cards = configs;
---

<Layout title="Configs">
  <section class="p-10 bg-gray-50 dark:bg-gray-900">
    <div class="container mx-auto px-4">
      <div class="text-center mb-10">
        <h1 class="text-5xl font-bold mb-4 text-gray-900 dark:text-white">Configs</h1>
        <p class="text-lg text-gray-700 dark:text-gray-300">Search and preview Configs.</p>
      </div>
    </div>
    <div class="flex justify-center mb-8">
      <div class="relative w-full max-w-md">
        <input
          type="search"
          id="storeSearch"
          autocomplete="off"
          placeholder="mint"
          class="w-full py-2 pl-10 pr-4 border rounded-lg shadow-sm focus:ring focus:outline-none dark:bg-gray-800 dark:text-gray-200 dark:placeholder-gray-400 dark:border-gray-700"
        />
        <Icon name="material-symbols:search" class="absolute top-2 left-2 w-6 h-6 text-gray-400 dark:text-gray-300" />
      </div>
    </div>
  </section>

  <div class="container mx-auto px-4 mt-8">
    <div id="filters" class="flex mb-8 space-x-4 overflow-x-auto md:overflow-x-hidden w-full md:justify-center">
      <button
        onclick="location.href='/themesdatabase'"
        id="allFilter"
        class="bg-gray-300 dark:bg-gray-700 text-gray-900 dark:text-gray-200 px-4 py-2 rounded-lg hover:bg-gray-400 dark:hover:bg-gray-600 transition-colors opacity-50">All</button
      >
      <button
        onclick="location.href='/database/themes'"
        id="themesFilter"
        class="bg-gray-300 dark:bg-gray-700 text-gray-900 dark:text-gray-200 px-4 py-2 rounded-lg hover:bg-gray-400 dark:hover:bg-gray-600 transition-colors opacity-50">Themes</button
      >
      <button
        onclick="location.href='/database/icons'"
        id="iconsFilter"
        class="bg-gray-300 dark:bg-gray-700 text-gray-900 dark:text-gray-200 px-4 py-2 rounded-lg hover:bg-gray-400 dark:hover:bg-gray-600 transition-colors opacity-50">Icons</button
      >
      <button
        onclick="location.href='/database/configs'"
        id="configsFilter"
        class="bg-gray-300 dark:bg-gray-700 text-gray-900 dark:text-gray-200 px-4 py-2 rounded-lg hover:bg-gray-400 dark:hover:bg-gray-600 transition-colors active:shadow-lg">Configs</button
      >
    </div>

    <div id="storeResults" class="grid grid-cols-1 md:grid-cols-3 gap-6">
      {
        cards.map((card) => {
          return (
            <section class="card bg-white rounded-lg shadow-md justify-between flex flex-col relative top-0 transition-all hover:shadow-lg hover:-top-1 dark:bg-gray-800 dark:text-gray-200">
              <div class="p-4 flex flex-col ">
                <div class="flex gap-4 justify-between">
                  <div>
                    <h3 class="text-2xl font-bold mb-2">{card.name}</h3>
                  </div>
                  {/* <h3 class="text-2xl font-bold mb-2">{card.package_number}</h3> */}
                </div>
                <img src={`${card.url_icon}`} alt={`${card.name}`} class="h-60 self-center p-4" />
                <p class="text-gray-600 mb-4 text-xl dark:text-gray-300">{card.description}</p>
                <div class="tags flex justify-between mb-4">
                  <div>
                    <span class={`${getDesktopColor(card.desktop)} px-2 py-1 rounded-lg text-sm`}>{card.desktop}</span>
                    <span class={`${getCategoryColor(card.category)} px-2 py-1 rounded-lg text-sm`}>{card.category}</span>
                  </div>
                  <div>
                    <span class={`bg-blue-300 text-blue-900 px-2 py-1 rounded-lg text-sm flex gap-2 items-center`}>
                      <Icon name="material-symbols:download" />
                      {getDownloads(card.maintainer, card.repository)}
                    </span>
                  </div>
                </div>
              </div>
              <div class="bg-gray-100 rounded-b-lg text-center flex gap-2 justify-between dark:bg-gray-700 dark:text-gray-300 dark:hover:bg-gray-600">
                <a class="block font-medium text-lg size-full p-2 active:bg-gray-600 hover:bg-gray-500 rounded-bl-lg" href={`/app#${card.category}_${card.package_number}`}>
                  <button class={`${card.category} ${card.package_number}`}>Details</button>
                </a>
                <button id="install-button" name={`${card.category} ${card.package_number}`} class="block font-medium text-lg size-full p-2 active:bg-gray-600 hover:bg-gray-500 rounded-br-lg ">
                  Install
                </button>
              </div>
            </section>
          );
        })
      }
    </div>
  </div>

  <div class="modal" id="modal_installer"></div>
  <div class="modal" id="modal_review"></div>
</Layout>

<script>
  let searchInput = document.getElementById("storeSearch") as HTMLInputElement;

  const buttons: NodeListOf<HTMLButtonElement> = document.querySelectorAll("#install-button");
  buttons.forEach((button) => {
    button.addEventListener("click", () => {
      const category = button.name.split(" ")[0];
      const package_number = button.name.split(" ")[1];
      navigator.clipboard.writeText(`themes install ${category} ${package_number}`);
      button.textContent = "Command copied âœ…";
    });

    button.addEventListener("mouseout", () => {
      button.textContent = "Install";
    });
  });

  searchInput.addEventListener("keyup", () => {
    const search = searchInput.value.toLowerCase();
    const cards = document.querySelectorAll("#storeResults .card");
    cards.forEach((element) => {
      const card = element as HTMLElement;
      if (!card.textContent?.toLowerCase().includes(search)) card.style.display = "none";
      if (card.textContent?.toLowerCase().includes(search)) card.style.display = "flex";
    });
  });
</script>
